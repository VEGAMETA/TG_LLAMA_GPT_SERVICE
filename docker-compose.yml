version: "3.9"

services:
  python:
    container_name: python
    build: .
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DB_HOST=host.docker.internal
      - DB_PORT=5431
      - DB_PASSWORD=password
      - DB_USER=postgres
      - DB_NAME=telegram
    networks:
      - tg_bot_network
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:16.2
    environment:
      - POSTGRES_DB=telegram
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_CHECKPOINT_TIMEOUT=45min
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - tg-db:/var/lib/postgresql/data
    ports:
      - 5431:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d telegram" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - tg_bot_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.3
    environment:
      - PGADMIN_DEFAULT_EMAIL=email@domain.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - tg-db:/var/lib/pgadmin
    ports:
      - 5050:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - tg_bot_network
    depends_on:
      - postgres

volumes:
  tg-db:
  llm-service:

networks:
  tg_bot_network:
    driver: bridge
    name: tg_bot_network
    external: true