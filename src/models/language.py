import enum
from aiogram.utils.markdown import hbold


class Language:
    def __init__(self, name: str, flag: str, dictionary: dict[str, str]):
        self.name = name
        self.flag = flag
        self.dictionary = dictionary


class Languages(enum.Enum):
    EN: Language = Language(
        name="English",
        flag="üá¨üáß/üá∫üá∏",
        dictionary={
            "greeting": "Hello, ",
            "start": "\nI am gpt bot based on open-source models!"
                     "\nFeel free to ask any question."
                     f"\ntype {hbold('/help')} for info",
            "restart": f"Hello again!\nType {hbold('/help')} for info",
            "help": "List of commands",
            "clear": "Context cleared.",

            "set_model": "Please select a model",
            "set_model_after": "Model has beem chosen: ",

            "set_language": "Please select a language",
            "set_language_after": "English",
            "command_help": "Help",
            "command_stop": "Stop",
            "command_clear": "Clear context",
            "command_set_language": "Set language",
            "command_set_model": "Set model",
            "cancel": "Cancel",
        }
    )
    RU: Language = Language(
        name="–†—É—Å—Å–∫–∏–π",
        flag="üá∑üá∫",
        dictionary={
            "greeting": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ",
            "start": "\n–Ø gpt –±–æ—Ç, —Å–æ–±—Ä–∞–Ω–Ω—ã–π –∏–∑ –º–æ–¥–µ–ª–µ–π –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ!"
                     "\n–ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å."
                     f"\n–ù–∞–ø–∏—à–∏—Ç–µ {hbold('/help')} –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥",
            "restart": f"–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ù–∞–ø–∏—à–∏—Ç–µ {hbold('/help')} –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥",
            "help": "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥",
            "clear": "–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω.",

            "set_model": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å",
            "set_model_after": "–í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: ",

            "set_language": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
            "set_language_after": "–†—É—Å—Å–∫–∏–π",
            "command_help": "–ü–æ–º–æ—â—å",
            "command_stop": "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
            "command_clear": "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç",
            "command_set_language": "–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
            "command_set_model": "–ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å",
            "cancel": "–û—Ç–º–µ–Ω–∞"
        }
    )
    ISV: Language = Language(
        name="Med≈æuslovjansky\n–ú–µ–¥–∂—É—Å–ª–æ–≤—ò–∞–Ω—Å–∫—ã",
        flag="-",
        dictionary={
            "greeting": "",
            "start": "\nI am gpt bot based on open-source models!"
                     "\nFeel free to ask any question."
                     f"\ntype {hbold('/help')} for info",
            "restart": f"Hello again!\nType {hbold('/help')} for info",
            "help": "List of commands",
            "clear": "Context cleared.",

            "set_model": "Please select a model",
            "set_model_after": "Model has beem chosen: ",

            "set_language": "Please select a language",
            "set_language_after": "English",
            "command_help": "Help",
            "command_stop": "Stop",
            "command_clear": "Clear context",
            "command_set_language": "Set language",
            "command_set_model": "Set model",
            "cancel": "Cancel",
        }
    )